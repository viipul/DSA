https://leetcode.com/problems/longest-valid-parentheses/

class Solution(object):
    def longestValidParentheses(self, s):
        if len(s)==1 or len(s)==0:
            return 0
        
        stack=[]
        i=0
        n=len(s)
        ans=[0]*n
        
        c=0
        while i<n:
            if s[i]=='(':
                stack.append([s[i],i])
                
            elif s[i]==')':
                if len(stack)>0 and stack[-1][0]=='(':
                        
                        ans[i]=1
                        ans[stack[-1][1]]=1
                        stack.pop()
                else:
                    stack.append([s[i],i])
            i+=1
        max_len=0
        i=0
        
        while i<n:
            if ans[i]==1:
                c=0
                while i<n and ans[i]==1:
                    c+=1
                    i+=1
                if c>max_len:
                    max_len=c
            i+=1
            
        return max_len 
                
            
        
        """
        :type s: str
        :rtype: int
        """
        
